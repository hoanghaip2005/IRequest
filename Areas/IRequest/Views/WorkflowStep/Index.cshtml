@model IEnumerable<App.Models.IRequest.WorkflowStep>

@{
    ViewData["Title"] = "Index";
}

<div class="container-fluid">
    <div class="row mt-4" style="font-size: 1.2rem;">
        <div class="mx-3">
            <span>Home</span>
            <span> / </span>
            <span>@ViewContext.RouteData.Values["controller"]</span>
            <span> / </span>
            <span>@ViewContext.RouteData.Values["action"]</span>
        </div>
    </div>
    <div class="row md-4"></div>
        <h1 class="p-3 mt-0">@ViewData["Title"]</h1>
    </div>
    <div class="row md-4 mx-3">
        <p>
            <a asp-action="Create" class="btn btn-primary">Create New</a>
        </p>
        <form asp-action="Index" method="get" class="mb-4">
            <div class="form-group">
                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search..." />
                <input type="submit" value="Search" class="btn btn-primary mt-2" />
            </div>
        </form>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.StepName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Workflow)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StepOrder)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AssignedUser)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TimeLimitHours)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ApprovalRequired)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.statsus)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.StepName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Workflow.WorkflowName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StepOrder)
                        </td>
                        <td>
                            @if (item.AssignedUser != null)
                            {
                                @Html.DisplayFor(modelItem => item.AssignedUser.UserName)
                            }
                            else
                            {
                                <span class="text-muted">Not Assigned</span>
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TimeLimitHours)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ApprovalRequired)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.statsus.StatusName)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.StepID" class="btn btn-primary btn-sm">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.StepID" class="btn btn-info btn-sm">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.StepID" class="btn btn-danger btn-sm">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const selectAllCheckbox = document.getElementById('select-all');
        const rowCheckboxes = document.querySelectorAll('.row-checkbox');

        selectAllCheckbox.addEventListener('change', function () {
            rowCheckboxes.forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
                const row = checkbox.closest('tr');
                if (selectAllCheckbox.checked) {
                    row.classList.add('table-success');
                } else {
                    row.classList.remove('table-success');
                }
            });
        });

        rowCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const row = this.closest('tr');
                if (this.checked) {
                    row.classList.add('table-success');
                } else {
                    row.classList.remove('table-success');
                }
            });
        });
    });
</script>

<style>
    .table-success {
        background-color: #d4edda !important;
    }
</style>